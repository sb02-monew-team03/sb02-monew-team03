plugins {
    id 'java'
    id 'org.springframework.boot' version '3.5.0'
    id 'io.spring.dependency-management' version '1.1.7'
}

group = 'com.team03.monew'
version = '0.0.1-SNAPSHOT'

java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(17)
    }
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}

def querydslDir = layout.buildDirectory.dir("generated/querydsl").get().asFile

sourceSets {
    main {
        java.srcDirs += querydslDir
    }
}

tasks.withType(JavaCompile).configureEach {
    options.compilerArgs += [
            "-Aquerydsl.generatedSourcesDir=${querydslDir}"
    ]
}

tasks.named("clean") {
    doLast {
        delete querydslDir
    }
}


dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.security:spring-security-test'
    compileOnly 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    runtimeOnly 'org.postgresql:postgresql'
    annotationProcessor 'org.projectlombok:lombok'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    testRuntimeOnly 'org.junit.platform:junit-platform-launcher'


    implementation 'com.querydsl:querydsl-jpa:5.0.0:jakarta'
    annotationProcessor "com.querydsl:querydsl-apt:5.0.0:jakarta"
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //Jakarta 설정 어노테이션에 사용된다.
    annotationProcessor "jakarta.annotation:jakarta.annotation-api"
    annotationProcessor "jakarta.persistence:jakarta.persistence-api"

    //글자 유사도
    implementation 'org.apache.commons:commons-text:1.10.0'

    // RSS를 파싱하기 위한 파서
    implementation 'org.jsoup:jsoup:1.20.1'

    // AWS S3 SDK 의존성
    implementation 'software.amazon.awssdk:s3:2.31.7'

    // 배치 사용을 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-batch'

    // Spring Boot Actuator를 위한 의존성
    implementation 'org.springframework.boot:spring-boot-starter-actuator'

    // Micrometer 매트릭 등록기 사용을 위한 의존성
    implementation 'io.micrometer:micrometer-core'

    // Prometheus 사용을 위한 의존성
    implementation 'io.micrometer:micrometer-registry-prometheus'

    // spring security
    implementation 'org.springframework.boot:spring-boot-starter-security'

}

tasks.named('test') {
    useJUnitPlatform()
}
